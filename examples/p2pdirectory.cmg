
ensem p2pdirectory {

	module comingle.lib.ExtLib import {
		diff :: ({A},{A}) -> {A}.
		not  :: bool -> bool.
	}

	module p2pdirectory.WifiDirectComingleDirectory import {
		next :: loc -> loc.
		lookupIP :: string -> string.
	}

	predicate startOwner  :: (string,loc) -> trigger.
	predicate startMember :: (string,loc) -> trigger.
	predicate quit        :: trigger.
	predicate connect     :: (string,string) -> trigger.

	predicate node        :: loc -> fact.
	predicate seen        :: string -> fact.
	predicate member      :: fact.
	predicate owner       :: fact.
	predicate ownerAt     :: loc -> fact.
	predicate joinRequest :: (string,string,string) -> fact.
	predicate reqCode     :: string -> fact.
	predicate nextLoc     :: loc -> fact.
	predicate remove      :: loc -> fact.

	predicate notifyNodeAdded   :: (loc,string,string,string) -> actuator.
	predicate notifyNodeRemoved :: loc -> actuator.
	predicate notifyLocAssign   :: loc -> actuator.
	predicate notifyOwnerQuit   :: actuator.

	rule startOwner  :: [O]startOwner(Code,LocO) 
                                   --o [O]owner(), [O]node(LocO), [O]reqCode(Code), [O]nextLoc(LocN)
                                       where LocN = next(LocO).
	rule startMember :: [M]startMember(Code,LocO) 
                                   --o [M]member(), [M]reqCode(Code), [M]ownerAt(LocO).

	rule connect :: [M]member(), [M]ownerAt(O), [M]reqCode(C) \ [M]connect(NameM,MacM) 
                              --o [O]joinRequest(C,NameM,MacM).

	rule join :: [O]owner(), [O]reqCode(C), { [O]node(L) | L -> Ls }, { [O]seen(M) | M -> Ms }
                     \ [O]joinRequest(C,Name,Mac), [O]nextLoc(LocN)
                           | not(Mac in Ms) --o { [L]notifyNodeAdded(LocN,Inet,Name,Mac) | L <- Ls }, 
                                                [LocN]notifyNodeAdded(LocN,Inet,Name,Mac), [LocN]notifyLocAssign(LocN), 
                                                [O]nextLoc(LocU), [O]node(LocN), [O]seen(Mac)
                                                where LocU = next(LocN),
                                                      Inet = lookupIP(Mac).

	rule quitO  :: [O]owner(), { [O]node(M) | M -> Ms } \ [M]quit() 
                                 --o { [M]notifyOwnerQuit() | M <- Ms } .

	rule quitM  :: [M]member(), [M]ownerAt(O) \ [M]quit() --o [O]remove(M).
	rule remove :: [O]remove(M), { [O]node(N) | N -> Ns } 
                            --o { [O]node(N) | N <- Ms },
                                { [M]notifyNodeRemoved(N) | N <- Ms }
                                where Ms = diff(Ns,{M}).

}

execute p2pdirectory {

}
